# -*- coding: utf-8 -*-
"""DM_3_dissimilarity.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vEiQrErNVqdzASUUesZGUmxUDwXMBFTp
"""

print("lab3")
dic={
    "No":[1,2,3,4],
    "Nominal":['A','B','C','A'],
    "Ordinal":["Excellent","Fair","Good","Excellent"],
    "Numerical":[45,22,64,28]
}
label=["Another","Nominal","Ordinal","Numerical"]
rank={
    "Fair":1,
    "Good":2,
    "Excellent":3
}

import pandas as pd

df=pd.DataFrame.from_dict(dic)
df

def findDisNum(lst):
  # print("numeric",lst)
  mx=max(lst)
  mn=min(lst)
  print(mx,mn)
  rows, cols = (len(lst), len(lst))
  dis = []
  # print(dis)
  for i in range(rows):
    templst=[]
    for j in range(cols):
      val=(abs(lst[i]-lst[j])/(mx-mn))
      print(val,end=" ")
      templst.append(round(val,2))
      # dis[i][j]=round(val,2)
      # print(dis[i][j],end=" ")
    print()
    dis.append(templst)
  # print("numerical")
  # for i in range(rows):
  #   for j in range(cols):
  #     print(dis[i][j],end=" ")
  #   print()
  print(dis)
  return dis

def findDisOrd(lst):
  print("ordinal",lst)
  norm_rank=[]
  for i in lst:
    norm_rank.append((rank[i]-1)/(len(rank)-1))
  print(norm_rank)
  return findDisNum(norm_rank)

dic_Nom={}
def findDisNom(lst):
  print(lst)
  dis=[]
  for i in range(len(lst)):
    templst=[]
    for j in range(len(lst)):
      if(lst[i]==lst[j]):
        templst.append(0)
      else:
        templst.append(1)
    dis.append(templst)
  print(dis)
  return dis

def findDis(df):
  idx=0
  for i in df:
    if(label[idx]=="Nominal"):
      dic_Nom[idx]=findDisNom(list(df[i]))
    elif(label[idx]=="Ordinal"):
      dic_Nom[idx]=findDisOrd(list(df[i]))
    elif(label[idx]=="Numerical"):
      dic_Nom[idx]=findDisNum(list(df[i]))
    idx=idx+1

# findNominal(df)
findDis(df)
print(dic_Nom)

rows, cols = (len(df["No"]), len(df["No"]))
noOfAtt=len(dic_Nom)
# final_dis = [[0]*cols]*rows
# print(final_dis)

rows=4
cols=4
noofdis=3
final_dis=[]
for i in range(rows):
  tempdis=[]
  for j in range(cols):
    Del_ij=1
    num=0
    deno=0
    for k in range(noofdis):
      num=num+(Del_ij)*(dic_Nom[k+1][i][j])
      deno=deno+Del_ij
    tempdis.append(round((num/deno),2))
    # final_dis[i][j]=round((num/deno),2)
    # print(final_dis,end=" ")
  print()
  final_dis.append(tempdis)
print(final_dis)

